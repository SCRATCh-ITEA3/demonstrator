kind: pipeline
type: docker
name: arm

platform:
  arch: arm
  os: linux

steps:
- name: codacy
  image: plugins/codacy
  settings:
    token:
      from_secret: codacy_token

- name: docker
  image: plugins/docker
  settings:
    username:
      from_secret: dockerhub_user
    password:
      from_secret: dockerhub_password
    repo: scratchitea3/demonstrator
    tags:
      - linux-arm

---
kind: pipeline
type: docker
name: x86

platform:
  arch: amd64
  os: linux

steps:
- name: otalyzer
  image: otarisgmbh/otalyzer
  commands:
  - python3 -m http.server 8081 --directory / &
  - mitmdump --showhost --ssl-insecure -w /app/dump.mitm &
  - sleep 5
  - python3 -m unittest discover -s otalyzer/
  - sleep 1 && pgrep -f mitmdump | xargs kill
  - /app/otalyzerworker -k otalyzer/keywords.json -s otalyzer/severity.json -p /app/dump.mitm --severity-threshold 10 --filename report

- name: docker
  image: plugins/docker
  settings:
    username:
      from_secret: dockerhub_user
    password:
      from_secret: dockerhub_password
    repo: scratchitea3/demonstrator
    tags:
      - linux-amd64

---
kind: pipeline
type: docker
name: manifest

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: dockerhub_user
    password:
      from_secret: dockerhub_password
    target: scratchitea3/demonstrator
    template: scratchitea3/demonstrator:OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm

depends_on:
- arm
- x86

---
kind: pipeline
type: docker
name: notification

steps:
- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    channel: build-automation
    when:
      status: [ success, failure ]

depends_on:
- manifest

---
kind: pipeline
type: docker
name: klee

platform:
  arch: amd64
  os: linux

steps:
- name: helloworld
  image: klee/klee:2.1
  commands:
  - rm -rf klee-helloworld
  - clang++ -I /home/klee/klee_src/include -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone -o /tmp/helloworld.bc -c src/helloworld.cpp
  - klee -libc=klee  --external-calls=all -output-dir=klee-helloworld  /tmp/helloworld.bc
  - ls klee-helloworld/*.err | awk -F. '{printf("\n# %s\n",$0);system("cat "$0)system("ktest-tool " $1 ".ktest")}'
  - klee-stats klee-helloworld


- name: regexp
  image: klee/klee:2.1
  commands:
  - rm -rf klee-regexp
  - clang -I /home/klee/klee_src/include -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone -o /tmp/regexp.bc -c src/regexp.c
  - klee --only-output-states-covering-new -solver-backend=z3 -output-dir=klee-regexp /tmp/regexp.bc
  - ls klee-regexp/*.err | awk -F. '{printf("\n# %s\n",$0);system("cat "$0)system("ktest-tool " $1 ".ktest")}'
  - klee-stats klee-regexp
